DROP DATABASE IF EXISTS upgrade_common;
CREATE DATABASE upgrade_common;
USE upgrade_common;
CREATE TABLE t1 (f1 integer) ENGINE=InnoDB;
CREATE USER 'nh_np_na';
CREATE USER 'nh_np_wa';
GRANT ALL PRIVILEGES ON *.* TO 'nh_np_wa';
CREATE USER 'nh_wp_na' IDENTIFIED BY 'pass_nh_wp_na';
CREATE USER 'nh_wp_wa' IDENTIFIED BY 'pass_nh_wp_wa';
GRANT ALL PRIVILEGES ON *.* TO 'nh_wp_wa';
CREATE USER 'wh_np_na'@'127.0.0.1';
CREATE USER 'wh_np_wa'@'127.0.0.1';
GRANT ALL PRIVILEGES ON *.* TO 'wh_np_wa'@'127.0.0.1';
CREATE USER 'wh_wp_na'@'127.0.0.1' IDENTIFIED BY 'pass_wh_wp_na';
CREATE USER 'wh_wp_wa'@'127.0.0.1' IDENTIFIED BY 'pass_wh_wp_wa';
GRANT ALL PRIVILEGES ON *.* TO 'wh_wp_wa';
CREATE TABLE part_range ( range_field INTEGER )
PARTITION BY RANGE (range_field) (
PARTITION p0 VALUES LESS THAN (10),
PARTITION p1 VALUES LESS THAN (100),
PARTITION p3 VALUES LESS THAN MAXVALUE
);
CREATE TABLE part_list ( list_field INTEGER )
PARTITION BY LIST (list_field) (
PARTITION p0 VALUES IN (1, 2),
PARTITION p1 VALUES IN (3, 4),
PARTITION p2 VALUES IN (5, 6)
);
CREATE TABLE part_hash ( hash_field INTEGER )
PARTITION BY HASH ( hash_field ) PARTITIONS 2;
CREATE TABLE part_key ( key_field INTEGER PRIMARY KEY )
PARTITION BY KEY () PARTITIONS 2;
CREATE TABLE subpart (purchased DATE)
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN MAXVALUE
);
CREATE TABLE proc_table (f1 INTEGER) ENGINE=InnoDB;
CREATE PROCEDURE proc1 (OUT param1 INT)
BEGIN
SELECT COUNT(*) INTO param1 FROM proc_table;
END//
CREATE FUNCTION func1 (s CHAR(20)) RETURNS CHAR(50) DETERMINISTIC RETURN s;
CREATE TABLE trig_table1 (f1 INTEGER) ENGINE=InnoDB;
CREATE TABLE trig_table2 (f1 INTEGER AUTO_INCREMENT PRIMARY KEY) ENGINE=InnoDB;
CREATE TRIGGER trigger1 BEFORE INSERT ON trig_table1 FOR EACH ROW INSERT INTO trig_table2 VALUES (NEW.f1);
CREATE TABLE parent (id INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
CREATE TABLE child (id INT, parent_id INT, INDEX (parent_id), FOREIGN KEY (parent_id) REFERENCES parent(id) ON DELETE RESTRICT) ENGINE=InnoDB;
