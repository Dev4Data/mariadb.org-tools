#!/bin/bash - 
#
# This script exists so that I don't need to remember or look up where things
# are when it is time to copy files over from the build servers for a release.
# It also helps me to not forget any steps.
#
# The purpose of this script is to add files from buildbot from a new MariaDB
# Galera Cluster release to the current MariaDB release.

#------------------------------------------------------------------------------
# Options (set these before running the script)
#------------------------------------------------------------------------------

umask 002

#killall gpg-agent

create_debian="${1}"  # Create Debian repository?
create_ubuntu="${2}"  # Create Ubuntu repository?
   create_yum="${3}"  # Create Yum repositories?
       is_ent="${4}"  # Is this an Enterprise release?
         tree="${5}"  # Tree
          rev="${6}"  # Revision
          num="${7}"  # Version number
  tarbuildnum="${8}"  # Buildbot tarbuildnum

case ${tree} in 
  '5.5'|'5.5-galera')
    debian_dists="wheezy"
    yum_dists="rhel5 rhel6 rhel7 sles11 sles12"
    ubuntu_dists="trusty"
    ;;
  '10.0e'|'10.0e-galera')
    debian_dists="wheezy jessie"
    yum_dists="centos5 rhel5 centos6 rhel6 centos7 rhel7 sles11 sles12"
    ubuntu_dists="trusty xenial"
    ;;
  '5.5e'|'5.5e-galera')
    debian_dists="wheezy"
    yum_dists="centos5 rhel5 centos6 rhel6 centos7 rhel7 sles11 sles12"
    ubuntu_dists="trusty"
    ;;
  '10.0'|'10.0-galera')
    debian_dists="wheezy jessie sid"
    yum_dists="rhel5 rhel6 rhel7 fedora23 opensuse42 sles12"
    ubuntu_dists="trusty xenial yakkety"
    ;;
  *) debian_dists="wheezy jessie sid"
     yum_dists="rhel5 rhel6 rhel7 fedora23 fedora24 opensuse42 sles11 sles12"
     ubuntu_dists="trusty xenial yakkety zesty"
    ;;
esac

#------------------------------------------------------------------------------
# Options below this point you probably don't need to change
#------------------------------------------------------------------------------

release="mariadb-${num}"                  # release to add galera packages to

#-------------------------------------------------------------------------------
#  Functions
#-------------------------------------------------------------------------------

loadDefaults() {
  # Load the paths (if they exist)
  if [ -f ${HOME}/.prep.conf ]; then
      . ${HOME}/.prep.conf
  else
    echo
    echo "The file ${HOME}/.prep.conf does not exist in your home."
    echo "The prep script creates a default template of this file when run."
    echo "Exiting..."
    exit 1
  fi
}

function runCommand() {
  echo "+ ${@}"
  sleep 1
  if ${@} ; then
    return 0
  else
    return 1
  fi
}

function line() {
  echo "-------------------------------------------------------------------------------"
}

#------------------------------------------------------------------------------
# Main Script
#------------------------------------------------------------------------------

eval $(gpg-agent --daemon)

loadDefaults                                    # Load Default paths and vars

# Set various options that change depending on whether this is an enterprise release or not
if [ "${is_ent}" = "yes" ];then
  suffix="signed-ent"
  #gpg_key="0xd324876ebe6a595f"                 # old enterprise key
  gpg_key="0xce1a3dd5e3c94f49"                  # new enterprise key
  dir_release="${dir_release_ent}" # Default location for mdbe releases
  dir_name="${num}"
  ubuntu_dists="trusty"
  p8_yum_dists="rhel71 rhel7 rhel6 sles12"
  architectures="amd64"
else
  suffix="signed"
  gpg_key="0xcbcb082a1bb943db"
  dir_name="${release}"
  architectures="amd64 x86"
  p8_yum_dists="rhel71 rhel7 rhel6 sles12"
fi

# At this point, all variables should be set. Print a usage message if the
# ${tarbuildnum} variable is not set (the last of the command-line variables)

if [ "$tarbuildnum" = "" ] ; then
    echo 1>&2 "Usage: $0 <debian?> <ubuntu?> <yum?> <is_ent?> <tree> <rev> <num> <tarbuildnum>"
    echo 1>&2 "example: $0 yes yes yes no 10.0 1234 10.0.17 9876"
    exit 1
fi

# After this point, we treat unset variables as an error
set -u
  # -u  Treat unset variables as an error when performing parameter expansion.
  #     An error message will be written to the standard error, and a
  #     non-interactive shell will exit.

#-------------------------------------------------------------------------------
#  Ubuntu
#-------------------------------------------------------------------------------
if [ "${create_ubuntu}" != "no" ]; then
  echo;echo;
  line
  echo "+ Adding files to Ubuntu repo..."
  line
  for dir_path in ${dir_corp} ${dir_release} ; do
    cd ${dir_path}/${dir_name}/repo/ubuntu
    for dist in ${ubuntu_dists} ; do
      for gv in ${ver_galera}; do
        for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${dist}-amd64/" -name "*galera-server*${dist}*.deb"); do
          runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
        done;
        for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${dist}-amd64/" -name "*galera-test*${dist}*.deb"); do
          runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
        done;
        if [ "${dir_path}" = "${dir_release}" ];then
          if [ "${dist}" = "trusty" ] || [ "${dist}" = "xenial" ]; then
            for file in $(find "${dir_archive_p8}/${tree}/${rev}/p8-${dist}-deb/" -name "*galera-server*${dist}*ppc64el.deb"); do
              runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
            done;
            for file in $(find "${dir_archive_p8}/${tree}/${rev}/p8-${dist}-deb/" -name "*galera-test*${dist}*ppc64el.deb"); do
              runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
            done;
            runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_ppc64el.changes
          fi
        fi
        #else
          for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${dist}-x86/" -name "*galera-server*${dist}*i386.deb"); do
            runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
          done;
          for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${dist}-x86/" -name "*galera-test*${dist}*i386.deb"); do
            runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
          done;
          runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_i386.changes
        #fi
        #for file in $(find "${dir_galera}/galera-${gv}-${suffix}/" -name "*${dist}*.deb"); do reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ; done
        runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_amd64.changes
        #if [ "${dist}" = "trusty" ] || [ "${dist}" = "xenial" ]; then
        #  runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_ppc64el.changes
        #fi
      done
    done
  done
else
  line
  echo "+ Skipping adding files to Ubuntu repo, as requested..."
  line
fi

#-------------------------------------------------------------------------------
#  Debian
#-------------------------------------------------------------------------------
if [ "${create_debian}" != "no" ]; then
    echo;echo;
  line
  echo "+ Adding files to Debian repo..."
  line
  for dir_path in ${dir_corp} ${dir_release} ; do
    cd ${dir_path}/${dir_name}/repo/debian
    #for i in "squeeze debian6" "wheezy wheezy"; do
    #for i in "squeeze debian6" "wheezy wheezy" "sid sid"; do
    for dist in ${debian_dists}; do
      for gv in ${ver_galera}; do
        if [ "${dist}" = "squeeze" ];then
          builder="debian6"
        else
          builder="${dist}"
        fi
        for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${builder}-amd64/" -name "*galera-server*${dist}*.deb"); do
          runCommand reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ;
        done;
        for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${builder}-amd64/" -name "*galera-test*${dist}*.deb"); do
          runCommand reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ;
        done;
        if [ "${is_ent}" != "yes" ];then
          for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${builder}-x86/" -name "*galera-server*${dist}*i386.deb"); do
            runCommand reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ;
          done;
          for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${builder}-x86/" -name "*galera-test*${dist}*i386.deb"); do
            runCommand reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ;
          done;
          runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_i386.changes
        fi
        #for file in $(find "${dir_galera}/galera-${gv}-${suffix}/" -name "*${dist}*.deb"); do reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ; done
        runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_amd64.changes
      done
    done
  done
else
  line
  echo "+ Skipping adding to Debian repo, as requested..."
  line
fi

#-------------------------------------------------------------------------------
#  RHEL, CentOS, Fedora, SUSE, openSUSE
#-------------------------------------------------------------------------------
if [ "${create_yum}" != "no" ]; then
  echo;echo;
  line
  echo "+ Adding files to rpm repos..."
  line
  cd ${dir_release}/${dir_name}/yum
  for REPONAME in ${yum_dists}; do
    for ARCH in ${architectures}; do
      # Remove old Galera files
      runCommand rm -v ./${REPONAME}-${ARCH}/rpms/MariaDB-Galera*
      runCommand rm -v ./${REPONAME}-${ARCH}/rpms/galera*

      # Copy in the new MariaDB Galera files
      case ${REPONAME} in 
        'rhel7'|'centos7')
          if [ "${ARCH}" = "amd64" ]; then
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-rpm-centos7-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-rpm-centos7-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
            for gv in ${ver_galera}; do
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*rhel7*x86_64.rpm ${REPONAME}-${ARCH}/rpms/
            done
          fi
          ;;
        'rhel6'|'centos6')
          runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-rpm-centos6-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
          runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-rpm-centos6-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
          for gv in ${ver_galera}; do
            if [ "${ARCH}" = "amd64" ]; then
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*rhel6*x86_64.rpm ${REPONAME}-${ARCH}/rpms/
            else
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*rhel6*i686.rpm ${REPONAME}-${ARCH}/rpms/
            fi
          done
          ;;
        'rhel5'|'centos5')
          runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-rpm-centos5-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
          runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-rpm-centos5-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
          for gv in ${ver_galera}; do
            if [ "${ARCH}" = "amd64" ]; then
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*rhel5*x86_64.rpm ${REPONAME}-${ARCH}/rpms/
            else
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*rhel5*i386.rpm ${REPONAME}-${ARCH}/rpms/
            fi
          done
          ;;
        'opensuse13')
          runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
          runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
          for gv in ${ver_galera}; do
            if [ "${ARCH}" = "amd64" ]; then
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*sles13*x86_64.rpm ${REPONAME}-${ARCH}/rpms/
            else
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*sles13*i586.rpm ${REPONAME}-${ARCH}/rpms/
            fi
          done
          ;;
        'opensuse42')
          if [ "${ARCH}" = "amd64" ]; then
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
            for gv in ${ver_galera}; do
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*sles42*x86_64.rpm ${REPONAME}-${ARCH}/rpms/
            done
          fi
          ;;
        'sles11')
          if [ "${REPONAME}-${ARCH}" = "sles11-amd64" ]; then
            # We pull sles11-amd64 packages from the sles11sp1-amd64 builder
            #runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}sp1-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
            #runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}sp1-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
          else
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
          fi
          for gv in ${ver_galera}; do
            if [ "${ARCH}" = "amd64" ]; then
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*sles11*x86_64.rpm ${REPONAME}-${ARCH}/rpms/
            else
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*sles11*i586.rpm ${REPONAME}-${ARCH}/rpms/
            fi
          done
          ;;
        'sles12')
          if [ "${ARCH}" = "amd64" ]; then
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
            runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-${REPONAME}-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
            for gv in ${ver_galera}; do
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*sles12*x86_64.rpm ${REPONAME}-${ARCH}/rpms/
            done
          fi
          ;;
        'fedora22'|'fedora23'|'fedora24')
          fcnum="${REPONAME:(-2)}"
          runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-rpm-${REPONAME}-${ARCH}/rpms/*server.rpm ${REPONAME}-${ARCH}/rpms/
          runCommand cp -avi ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-rpm-${REPONAME}-${ARCH}/rpms/*test.rpm ${REPONAME}-${ARCH}/rpms/
          for gv in ${ver_galera}; do
            if [ "${ARCH}" = "amd64" ]; then
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*fc${fcnum}*x86_64.rpm ${REPONAME}-${ARCH}/rpms/
            else
              runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*fc${fcnum}*i686.rpm ${REPONAME}-${ARCH}/rpms/
            fi
          done
          ;;
      esac
    done
    echo;echo;
  done

  # we now need to handle MariaDB Enterprise dists
  #if [ "${is_ent}" = "yes" ];then
    for P8_REPONAME in ${p8_yum_dists}; do
      case ${P8_REPONAME} in 
        'rhel7'|'rhel6')
          P8_DIR="${P8_REPONAME}"
          P8_ARCH='ppc64'
          ;;
        'sles12')
          P8_REPONAME='suse12'
          P8_DIR='sles12'
          P8_ARCH='ppc64le'
          ;;
        'rhel71')
          P8_DIR='rhel7'
          P8_ARCH='ppc64le'
          ;;
        *)
          echo "UNKNOWN ERROR: Unable to assign P8_DIR or P8_ARCH variables."
          echo "Something has gone wrong."
          exit 1
          ;;
      esac
      # Remove old Galera files
      runCommand rm -v ${P8_DIR}-${P8_ARCH}/rpms/MariaDB-Galera*
      runCommand rm -v ${P8_DIR}-${P8_ARCH}/rpms/galera*
      
      # copy in new files
      runCommand cp -avi ${dir_archive_p8}/${tree}/${rev}/p8-${P8_REPONAME}-rpm/rpms/*server.rpm ${P8_DIR}-${P8_ARCH}/rpms/
      runCommand cp -avi ${dir_archive_p8}/${tree}/${rev}/p8-${P8_REPONAME}-rpm/rpms/*test.rpm   ${P8_DIR}-${P8_ARCH}/rpms/
      for gv in ${ver_galera}; do
        runCommand cp -avi ${dir_galera}/galera-${gv}-${suffix}/rpm/galera-${gv}*${P8_DIR}*${P8_ARCH}.rpm ${P8_DIR}-${P8_ARCH}/rpms/
      done
    done
    echo;echo;
  #fi

  # all rpm packages are now in place, sign them
  cd ${dir_release}/${dir_name}/yum
  rpmsign --addsign --key-id=${gpg_key} $(find . -name '*.rpm')
  
  # updating the repositories doesn't work over nfs so we need to move the
  # yum dir to $HOME and then move it back when we're done
  runCommand mv -i ${dir_release}/${dir_name}/yum ~/
  cd ~/yum
  
  # update the sums, refresh the repo metadata, & sign the repomd.xml files
  for DIR in *-* ; do
    if [ -d "${DIR}" ]; then
      # test for CentOS
      if [ "${DIR:0:6}" = "centos" ]; then
        echo "+ skipping centos dir"
      else
        # Not CentOS, so we're good to go
        cd ~/yum/${DIR}
        echo
        pwd
        if [ -e md5sums.txt ]; then
          rm -v md5sums.txt
        fi
        md5sum $(find . -name '*.rpm') >> md5sums.txt
        runCommand md5sum -c md5sums.txt

        if [ -e sha1sums.txt ]; then
          rm -v sha1sums.txt
        fi
        sha1sum $(find . -name '*.rpm') >> sha1sums.txt
        runCommand sha1sum -c sha1sums.txt

        if [ -e sha256sums.txt ]; then
          rm -v sha256sums.txt
        fi
        sha256sum $(find . -name '*.rpm') >> sha256sums.txt
        runCommand sha256sum -c sha256sums.txt

        if [ -e sha512sums.txt ]; then
          rm -v sha512sums.txt
        fi
        sha512sum $(find . -name '*.rpm') >> sha512sums.txt
        runCommand sha512sum -c sha512sums.txt

        cd ~/yum
        # Create the repository and sign the repomd.xml file
        case ${DIR} in
          'centos5-amd64'|'centos5-x86'|'rhel5-amd64'|'rhel5-x86'|'sles11-amd64'|'sles11-x86')
            # CentOS & RHEL 5 don't support newer sha256 checksums
            runCommand createrepo -s sha --database --pretty ${DIR}
            ;;
          *)
            runCommand createrepo --database --pretty ${DIR}
            ;;
        esac
        #runCommand createrepo --update --database --pretty ${DIR}
        if [ -e ${DIR}/repodata/repomd.xml.asc ]; then
          runCommand rm -v ${DIR}/repodata/repomd.xml.asc
        fi
        runCommand gpg2 --detach-sign --armor -u ${gpg_key} ${DIR}/repodata/repomd.xml
      fi # end of CentOS test
    fi   # end of -d test
  done

  # moving the yum dir back to where it belongs
  runCommand mv -i ~/yum ${dir_release}/${dir_name}/

  # sync repo updates to the corp dirs
  for dir in ${yum_dists}; do
    case ${dir} in 
      'rhel6')
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/rhel/6/i386    ${dir_corp}/${dir_name}/yum/rhel/6/
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/rhel/6/x86_64  ${dir_corp}/${dir_name}/yum/rhel/6/
        ;;
      'rhel7')
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/rhel/7/x86_64  ${dir_corp}/${dir_name}/yum/rhel/7/
        ;;
      'rhel73')
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/rhel/7.3/x86_64  ${dir_corp}/${dir_name}/yum/rhel/7.3/
        ;;
      'sles11') 
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/sles/11/x86_64 ${dir_corp}/${dir_name}/yum/sles/11/
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/sles/11/i386   ${dir_corp}/${dir_name}/yum/sles/11/
        ;;
      'sles12') 
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/sles/12/x86_64 ${dir_corp}/${dir_name}/yum/sles/12/
        ;;
      'opensuse42') 
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/opensuse/42/x86_64 ${dir_corp}/${dir_name}/yum/opensuse/42/
        ;;
      'fedora24') 
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/fedora/24/x86_64 ${dir_corp}/${dir_name}/yum/fedora/24/
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/fedora/24/i386   ${dir_corp}/${dir_name}/yum/fedora/24/
        ;;
      'fedora25') 
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/fedora/25/x86_64 ${dir_corp}/${dir_name}/yum/fedora/25/
        rsync -avP --delete-after ${dir_release}/${dir_name}/yum/fedora/25/i386   ${dir_corp}/${dir_name}/yum/fedora/25/
        ;;
    esac
  done
else
  line
  echo "+ Skipping adding files to Yum repo, as requested..."
  line
fi

# vim: filetype=sh
